name: CI tests

on:
  push:
    branches:
    - main
    - '*\@[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.get_pkg_info.outputs.branch }}
      pkg_name: ${{ steps.get_pkg_info.outputs.pkg_name }}
    steps:
    - uses: actions/checkout@v2

    - name: Extract package name and version from branch name
      id: get_pkg_info
      shell: bash
      run: |
        echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
        echo "::set-output name=pkg_name::$(echo ${GITHUB_REF#refs/heads/} |cut -d '@' -f 1)"
        echo "::set-output name=pkg_ver::$(echo ${GITHUB_REF#refs/heads/} |cut -d '@' -f 2)"

    - name: Build docker image and push
      if: ${{ steps.get_pkg_info.outputs.branch != 'main' }}
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        registry: docker.pkg.github.com
        name: "icgc-argo/demo-wf-pkgs/${{steps.get_pkg_info.outputs.pkg_name}}"
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        dockerfile: "./${{steps.get_pkg_info.outputs.pkg_name}}/Dockerfile"
        context: "./${{steps.get_pkg_info.outputs.pkg_name}}"
        tags: "${{steps.get_pkg_info.outputs.pkg_ver}}"

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.5
      uses: actions/setup-python@v2
      with:
        python-version: 3.5

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

    - name: Install Nextflow 
      run: |
        wget -qO- https://get.nextflow.io | bash
        sudo chmod 755 nextflow
        sudo mv nextflow /usr/local/bin/

    - name: Login to GitHub Packages Docker Registry
      uses: docker/login-action@v1
      with:
        registry: docker.pkg.github.com
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Run tests for all packages
      if: ${{ needs.build.outputs.branch == 'main' }}
      run: |
        for t in `find . -type d -name tests |sort`; do
          pushd $t
          pwd
          ./run_tests.sh
          popd
        done

    - name: Run tests for the current package only
      if: ${{ needs.build.outputs.branch != 'main' }}
      run: |
        cd ./${{needs.build.outputs.pkg_name}}/tests
        ./run_tests.sh
